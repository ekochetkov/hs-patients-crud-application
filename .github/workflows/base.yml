---
name: Base workflow

on: workflow_call

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: DeLaGuardo/setup-clj-kondo@master
        with:
          version: '2020.04.05'

      - uses: actions/checkout@v3

      - name: Run on ubuntu or macosx
        run: clj-kondo --lint .

  Test-backend:
    needs: [Lint]
    runs-on: ubuntu-latest
    services:
      db:
        image: bitnami/postgresql:14.5.0-debian-11-r3
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRESQL_USERNAME: user
          POSTGRESQL_PASSWORD: userpass
          POSTGRESQL_DATABASE: clinic
        ports:
          - 5432:5432
    env:
      DATABASE_URL: >-
        jdbc:postgresql://localhost:5432/clinic?user=user&password=userpass
    steps:
      - uses: actions/checkout@v3

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.3
        with:
          cli: 1.11.1.1149

      - name: Download app deps
        run: clojure -P

      - name: Migrate database schema
        run: clojure -M:migrate

      - name: Backend test
        run: clojure -X:backend-test

  Build-frontend-and-pack:
    needs: [Lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install shadow-cljs and deps
        run: npm install -g shadow-cljs & npm install react rc-easyui

      - name: Compile frontend
        run: shadow-cljs release dev

      - name: Create Easyui styles dirs
        run: mkdir --parents resources/public/css/easyui

      - name: Copy Easyui base style files
        run: cp --recursive node_modules/rc-easyui/dist/themes/{icons,icon.css,react.css} resources/public/css/easyui

      - name: Copy Easyui ui theme
        run: cp --recursive node_modules/rc-easyui/dist/themes/default resources/public/css/easyui/theme

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.3
        with:
          cli: 1.11.1.1149

      - name: Download app deps
        run: clojure -P

      - name: Pack application
        run: clojure -X:uberjar

      - uses: actions/upload-artifact@master
        with:
          name: app.jar
          path: target/app.jar

  Acceptance-test-firefox:
    needs: [Test-backend, Build-frontend-and-pack]
    runs-on: ubuntu-latest
    env:
      APP_URL: "http://host.docker.internal"
    services:

      db:
        image: bitnami/postgresql:14.5.0-debian-11-r3
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRESQL_USERNAME: user
          POSTGRESQL_PASSWORD: userpass
          POSTGRESQL_DATABASE: clinic
        ports:
          - 5432:5432

      firefox:
        image: selenium/standalone-firefox:103.0
        options: --add-host=host.docker.internal:host-gateway
        ports:
          - 4445:4444

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: app.jar

      - name: Build app image
        run: docker build -t local .

      - name: Run app container
        run: >-
          docker run
          --net=host
          --env DATABASE_URL='jdbc:postgresql://localhost:5432/clinic?user=user&password=userpass'
          --env PORT=80
          --env WS_URL='ws://host.docker.internal/ws'
          --detach local
          > local-container-id

      - name: Check app health
        run: sleep 15s && curl localhost/health

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.3
        with:
          cli: 1.11.1.1149

      - name: Migrate database schema
        env:
          DATABASE_URL: >-
            jdbc:postgresql://localhost:5432/clinic?user=user&password=userpass
        run: clojure -M:migrate

      - name: Acceptance test in Firefox
        env:
          SELENIUM_GRID_HUB_URL: "http://127.0.0.1:4445/wd/hub"
          SELENIUM_GRID_BROWSER: "firefox"
          DATABASE_URL: >-
            jdbc:postgresql://localhost:5432/clinic?user=user&password=userpass
        run: clojure -X:acceptance-test

      - name: Stop app container
        run: docker stop $(cat local-container-id)


  Acceptance-test-chrome:
    needs: [Test-backend, Build-frontend-and-pack]
    runs-on: ubuntu-latest
    env:
      APP_URL: "http://host.docker.internal"
    services:

      db:
        image: bitnami/postgresql:14.5.0-debian-11-r3
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRESQL_USERNAME: user
          POSTGRESQL_PASSWORD: userpass
          POSTGRESQL_DATABASE: clinic
        ports:
          - 5432:5432

      chrome:
        image: selenium/standalone-chrome:103.0
        options: --add-host=host.docker.internal:host-gateway
        ports:
          - 4444:4444

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: app.jar

      - name: Build app image
        run: docker build -t local .

      - name: Run app container
        run: >-
          docker run
          --net=host
          --env DATABASE_URL='jdbc:postgresql://localhost:5432/clinic?user=user&password=userpass'
          --env PORT=80
          --env WS_URL='ws://host.docker.internal/ws'
          --detach local
          > local-container-id

      - name: Check app health
        run: sleep 15s && curl localhost/health

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.3
        with:
          cli: 1.11.1.1149

      - name: Migrate database schema
        env:
          DATABASE_URL: >-
            jdbc:postgresql://localhost:5432/clinic?user=user&password=userpass
        run: clojure -M:migrate

      - name: Acceptance test in Chrome
        env:
          SELENIUM_GRID_HUB_URL: "http://127.0.0.1:4444/wd/hub"
          SELENIUM_GRID_BROWSER: "chrome"
          DATABASE_URL: >-
            jdbc:postgresql://localhost:5432/clinic?user=user&password=userpass
        run: clojure -X:acceptance-test

      - name: Stop app container
        run: docker stop $(cat local-container-id)
