---
name: Clojure CI to Heroku (preprod)

on:
  #  push:
  #    branches: [ "master" ]
  pull_request:
    branches: ["master"]

jobs:
  Test-backend:
    runs-on: ubuntu-latest
    services:
      db:
        image: aidbox/db:12.1.1-PRO.RC1
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    env:
      DATABASE_URL: "jdbc:postgresql://127.0.0.1:5432/clinic?user=postgres&password=postgres"
    steps:
      - uses: actions/checkout@v3

      - name: Create database for tests
        env:
          PGPASSWORD: postgres
        run: |
          sudo apt-get update
          sudo apt install -y postgresql-client
          psql -h 127.0.0.1 -p 5432 -U postgres -c "create database clinic"

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.3
        with:
          cli: 1.11.1.1149

      - name: Download app deps
        run: clojure -P

      - name: Migrate database schema
        run: clojure -M:migrate

      - name: Backend test
        run: clojure -X:backend-test

  Build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install shadow-cljs and deps
        run: npm install -g shadow-cljs & npm install react rc-easyui

      - name: Compile frontend
        run: shadow-cljs release dev

      - uses: actions/upload-artifact@v3
        with:
          name: main.js
          path: resources/public/js/main.js

  Pack-application:
    needs: [Test-backend, Build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: lein deps

      - uses: actions/download-artifact@v3
        with:
          name: main.js
          path: resources/public/js/

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.3
        with:
          cli: 1.11.1.1149

      - name: Download app deps
        run: clojure -P

      - name: Pack application
        run: clojure -X:uberjar

      - uses: actions/upload-artifact@master
        with:
          name: app.jar
          path: target/app.jar

  Deploy-to-heroku-as-image:
    needs: [Pack-application]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: app.jar

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "demo-patients-crud"
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          healthcheck: "https://demo-patients-crud.herokuapp.com/health"
          checkstring: "ok"
          rollbackonhealthcheckfailed: true
          delay: 15

  Acceptence-test:
    needs: [Deploy-to-heroku-as-image]
    runs-on: ubuntu-latest
    env:
      APP_URL: "https://demo-patients-crud.herokuapp.com/"
    services:
      chrome:
        image: selenium/standalone-chrome:103.0
        ports:
          - 4444:4444
      firefox:
        image: selenium/standalone-firefox:103.0
        ports:
          - 4445:4444
    steps:
      - uses: actions/checkout@v3

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.3
        with:
          cli: 1.11.1.1149

      - name: Test in Chrome
        env:
          SELENIUM_GRID_HUB_URL: "http://127.0.0.1:4444/wd/hub"
          SELENIUM_GRID_BROWSER: "chrome"
        run: clojure -X:integration-test

      - name: Test in Firefox
        env:
          SELENIUM_GRID_HUB_URL: "http://127.0.0.1:4445/wd/hub"
          SELENIUM_GRID_BROWSER: "firefox"
        run: clojure -X:integration-test
